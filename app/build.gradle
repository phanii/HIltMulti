plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("dagger.hilt.android.plugin")
}

android {
    compileSdk 31
    def versionPropsFile = file('version.properties')


    def increaseVersionCode= {
        gradle.taskGraph.whenReady { taskGraph ->
            if (taskGraph.hasTask(assembleRelease)) {
                /* when run release task */
                if (versionPropsFile.canRead()) {
                    def Properties versionProps = new Properties()

                    versionProps.load(new FileInputStream(versionPropsFile))

                    def build = versionProps['VERSION_BUILD'].toInteger() + 1
                    def code = versionProps['VERSION_CODE'].toInteger() + 1

                    versionProps['VERSION_BUILD'] = build.toString()
                    versionProps['VERSION_CODE'] = code.toString()
                    versionProps.store(versionPropsFile.newWriter(), null)
                } else {
                    throw new GradleException("Could not read version.properties!")
                }
            }
        }
    }
    /*defaultConfig {
        applicationId "com.ncr.hiltmulti"
        minSdk 21
        targetSdk 31
        //versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode versionBuild
    }*/
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def name = versionProps['VERSION_NAME']
        def code = versionProps['VERSION_CODE'].toInteger() + 1
        versionProps['VERSION_CODE']=code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.ncr.hiltmulti"
            minSdk 21
            targetSdk 31
            versionName name
            versionCode code
          }
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }
    increaseVersionCode()

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{

    viewBinding=true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dynamicFeatures = [':dynamicfeature']
}

dependencies {
    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

kapt {
    correctErrorTypes = true
}


